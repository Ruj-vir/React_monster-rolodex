{"version":3,"sources":["components/card/card.component.jsx","components/card_list/card_list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","title","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAACC,GACjB,OACI,sBAAMC,UAAU,iBAAhB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,kCAAKN,EAAMI,QAAQG,aCJlBC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,YAAf,SAEID,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLhDQ,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACrC,OACE,uBACEd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6CDG,E,kDAhDb,aAAe,IAAD,8BACZ,gBAeFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,MAAOC,MAAML,EAAEG,OAAOC,SAd1D,EAAKE,MAAQ,CACXd,SAAU,GACVU,YAAa,GACbG,MAAQ,IANE,E,qDAUd,WAAqB,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAET,SAAUmB,S,oBAO/C,WAAU,IAAD,EACiCC,KAAKN,MAArCd,EADD,EACCA,SAAUU,EADX,EACWA,YAAaG,EADxB,EACwBA,MACzBQ,EAAmBrB,EAASsB,QAAO,SAAC7B,GAAD,OACvCA,EAAQE,KAAK4B,cAAcC,SAASd,EAAYa,kBAGlD,OACE,qBAAKjC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iDACA,6BAAKuB,IACL,cAAC,EAAD,CACAV,YAAY,eACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUJ,SAAUqB,a,GApCZI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.feb8c1ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\nexport const Card = (props) => {\r\n    return(\r\n        <div  className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p> {props.monster.email}</p>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport './card_list.css';\r\nimport {Card} from '../card/card.component.jsx'\r\nexport const CardList = (props) => {\r\n    console.log(props)\r\n    return(\r\n        <div className='card_list'>            \r\n          {\r\n            props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)\r\n          }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./search-box.css\";\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { CardList } from \"./components/card_list/card_list.component\";\nimport { SearchBox } from './components/search-box/search-box.component.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchFiled: \"\",\n      title : ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange =(e)=>{\n    this.setState({searchFiled:e.target.value, title:e.target.value})\n  }\n\n  render() {\n    const { monsters, searchFiled ,title} = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchFiled.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Monster Rolodex</h1>\n          <h1>{title}</h1>\n          <SearchBox\n          placeholder='search Robox'\n          handleChange={this.handleChange}\n          />\n          <CardList monsters={filteredMonsters} />\n        </header>\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}